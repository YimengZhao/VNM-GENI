#ovs1
sudo ovs-vsctl add-br br0
sudo ifconfig eth1 0
sudo ifconfig eth2 0
sudo ovs-vsctl set-fail-mode br0 secure
sudo ovs-vsctl add-port br0 eth1
sudo ovs-vsctl add-port br0 eth2
sudo ovs-vsctl set bridge br0 other-config:datapath-id=0000000000000001
sudo ovs-vsctl set-controller br0 tcp:128.163.232.85:6633
sudo ovs-vsctl show
sudo ovs-vsctl find bridge datapath_id=0000000000000001

#ovs2
sudo ovs-vsctl add-br br0
sudo ifconfig eth1 0
sudo ifconfig eth2 0
sudo ovs-vsctl add-port br0 eth1
sudo ovs-vsctl add-port br0 eth2
sudo ovs-vsctl set bridge br0 other-config:datapath-id=0000000000000002
sudo ovs-vsctl set-controller br0 tcp:128.163.232.85:6633
sudo ovs-vsctl show
sudo ovs-vsctl find bridge datapath_id=0000000000000002
sudo ovs-vsctl set-fail-mode br0 secure

#run controller
cd /tmp/pox
./pox.py --verbose forwarding.l2_learning forwarding.migrate_vn 

#share vlan
omni.py -V 3 -a uky-ig poa SimpleTopoOne geni_sharelan --optionsfile lan-options.json

#at command 
# note: remember to install at on all switchesifconfig

sudo at -f interface-down.sh -v 11:35

ssh -t yzhao389@128.163.232.70 'sudo at -f interface-down.sh -v now + 1 minute'

#install pip
sudo apt-get install python-pip python-dev build-essential 
sudo pip install --upgrade pip 
sudo pip install --upgrade virtualenv

#install paramiko
sudo pip install paramiko

#tcpdump
sudo tcpdump -i eth1 -w ovs2-eth1.pcap &
pid1=$! 
sudo tcpdump -i eth2 -w ovs2-eth2.pcap &
pid2=$! 
sleep 10s
sudo kill $pid1
sudo kill $pid2

sudo tcpdump -i eth1 -w ovs2-eth1.pcap & &&pid1=$!&&sleep 10s&&sudo kill $pid1

#kill all tcpdump
ps -A | grep tcpdump | cut -d " " -f1 |  xargs sudo kill -9

scp -r -P 31290 yzhao389@pc5.lan.sdn.uky.edu:~/host1_tcpdump ./
scp -r -P 31290 yzhao389@pc1.lan.sdn.uky.edu:~/host2_tcpdump ./
scp -r yzhao389@pcvm5-27.lan.sdn.uky.edu:~/ovs1_tcpdump ./
scp -r yzhao389@pcvm5-27.lan.sdn.uky.edu:~/ovs2_tcpdump ./

iperf -s
iperf -c 192.168.10.10 -t 300


